import      "sscf"
import[C]   "pcr"

//Stops the program, and gives a result code (if meaningful in the system)
function quit (code: int)
{
	//TODO: Implement it.
}

//TODO: This function shall be moved to a GPIO library.
function[C] digitalOut (address: int, value: bool):()

//Message endpoint adrees structure.
struct[C] _EndPointAddress (actorPtr: Cpointer, inputPtr: Cpointer)
//type EndPointAddress is (actorPtr: Cpointer, inputPtr: Cpointer)

//Internal Time information structure
struct[C] _TimerInfo(
	destInput : _EndPointAddress,
	next : Cpointer,
	scheduledTime : int,
	periodMS : int
)

/**Timer actor, used to receive periodic notifications.
 * \param periodMS: Timer period, in milliseconds
 */
actor Timer (var periodMS: int)
{
	output tick()

	input tickInput()
	{
		tick()
	}

	var timerID:int = timer_start(periodMS, tickInput)
	var info: _TimerInfo

	input stop()
	{
		timer_stop (timerID)
		timerID = -1
	}
	
	input start()
	{
		if (timerID >= 0)
			timer_stop (timerID)
			
		timerID = timer_start(periodMS, tickInput, info)
	}
}